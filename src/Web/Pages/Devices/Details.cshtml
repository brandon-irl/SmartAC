@page "{serialNumber?}"
@model Web.Pages.Devices.DetailsModel

<div class="cover-container d-flex h-100 p-3 mx-auto flex-column">
    <h2>@Model.Device.SerialNumber</h2>
    
    <p>Last 7 Temperature Readings</p>
    <canvas class="my-4" id="myChart" width="900" height="380"></canvas>
    
    <div class="table-responsive">
        <table class="table table-sm table-hover table-striped">
            <thead>
                <tr>
                    <th>Status</th>
                    <th>
                        @Html.DisplayNameFor(mode => Model.SensorReadings[0].Time)
                    </th>
                    <th>
                        @Html.DisplayNameFor(mode => Model.SensorReadings[0].Temperature)
                    </th>
                    <th>
                        @Html.DisplayNameFor(mode => Model.SensorReadings[0].Humidity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(mode => Model.SensorReadings[0].COLevel)
                    </th>
                    <th>
                        @Html.DisplayNameFor(mode => Model.SensorReadings[0].HealthStatus)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var sr in Model.SensorReadings.Take(50))
                {
                    <tr>
                        <td>
                            @if (sr.Alerts.Any())
                            {
                                <span class="badge badge-danger" data-toggle="tooltip" data-placement="left"
                            title=@sr.Alerts.Count()>Alert</span>
                            }
                            else
                            {
                                <span class="badge badge-success">Ok</span>
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(_ => sr.Time)
                        </td>
                        <td>
                            @Html.DisplayFor(_ => sr.Temperature)
                        </td>
                        <td>
                            @Html.DisplayFor(_ => sr.Humidity)
                        </td>
                        <td>
                            @Html.DisplayFor(_ => sr.COLevel)
                        </td>
                        <td>
                            @Html.DisplayFor(_ => sr.HealthStatus)
                        </td>
                        <td>
                            @if (sr.Alerts.Any())
                            {

                                <button type="button" class="btn btn-link resolve-link"
                            value=@sr.Alerts.FirstOrDefault().Id>Resolve</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>
<script>
    @{
        var temps = $"[{String.Join(",", Model.SensorReadings.Take(7).Select(_ => _.Temperature).Reverse())}]";
    }
    var ctx = document.getElementById("myChart");
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ["1", "2", "3", "4", "5", "6", "7"],
            datasets: [{
                data: @temps,
                lineTension: 0,
                backgroundColor: 'transparent',
                borderColor: '#007bff',
                borderWidth: 4,
                pointBackgroundColor: '#007bff'
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: false
                    }
                }]
            },
            legend: {
                display: false,
            }
        }
    });

    $(document).ready(function () {
        $('.resolve-link').click((e) => {
            $.ajax({
                type: "POST",
                url: "/Alert/Resolve",
                data: e.currentTarget.value,
                contentType: "application/json",
                error: (e) => alert("Error..."),
                success: (s) => alert("Success!"),
            });
        });
    });
</script>